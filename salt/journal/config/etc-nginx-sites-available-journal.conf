{% if pillar.journal.get('default_host') %}
    {% set public_host = pillar.journal.get('default_host') %}
{% elif salt['elife.only_on_aws']() %}
    {% set public_host = salt['elife.cfg']('project.full_hostname') %}
{% else %}
    {% set public_host = 'dev--journal.elifesciences.org' %}
{% endif %}

{% if salt['elife.only_on_aws']() %}
    {% set public_scheme = 'https' %}
{% else %}
    {% set public_scheme = 'http' %}
{% endif %}

{# todo: mass redirects are useful in general. lets find a way of supporting this that isn't elife-specific #}
include /etc/nginx/traits.d/redirect-existing-paths.conf;

{# these are subdomain => canonical domain + path redirects #}
{% for subdomain, redirect_path in pillar.journal.get('subdomain_redirects', {}).items() %}
server {
    server_name {{ subdomain }}.{{ pillar.elife.domain }};
    {% if salt['elife.cfg']('project.elb') or salt['elife.cfg']('project.alb') %}
        # we're one of a cluster of journals behind a CDN
        listen 80;
    {% else %}
        # we're a standalone journal ...
        listen 80;
        {% if public_scheme == 'https' %}
        # with a domain name, which means SSL is available
        listen 443 ssl;
        {% endif %}
    {% endif %}
    {% if redirect_path %}
    # temporary redirect. TODO: change to permanent
    return 302 {{ public_scheme }}://{{ public_host }}{{ redirect_path }};
    {% else %}
    return 301 {{ public_scheme }}://{{ public_host }}$request_uri;
    {% endif %}
}{% endfor %}

map $http_x_forwarded_host $robots_disallow {
    default "/";
    "~^(?<first_host>(?:[^,]+\.)?{{ pillar.elife.domain|regex_escape }})\s*(?:,|$)" "";
}

map $http_x_forwarded_host $http_x_forwarded_host_filtered {
    default "";
    "~^(?<first_host>(?:[^,]+\.)?{{ pillar.elife.domain|regex_escape }})\s*(?:,|$)" $first_host;
}

server {
    {% if salt['elife.cfg']('project.elb') or salt['elife.cfg']('project.alb') %}
    listen 80 default_server;
    {% else %}
    listen 80 default_server;
        {% if public_scheme == 'https' %}
    listen 443 ssl default_server;
        {% endif %}
    {% endif %}

    {% if salt['elife.only_on_aws']() %}
        server_name .{{ pillar.elife.domain }};
        if ($http_x_forwarded_proto = "http") {
            rewrite ^(.*)$ https://$host$1 permanent;
        }
    {% else %}
        server_name localhost;
    {% endif %}

    root /srv/journal/web;

    {% if pillar.elife.env == 'prod' %}
    include /etc/nginx/traits.d/robots.conf;
    {% else %}
    include /etc/nginx/traits.d/norobots.conf;
    {% endif %}

    location ~ \..*/.*\.php$ {
        return 403;
    }

    location / {
        try_files $uri /app.php$is_args$query_string;

        add_header Cache-Control "public, max-age={{ 60 * 60 * 24 * 7 }}";

        rewrite '^/(?:cgi|content|elife)/.+?/(?:e|eLife\.)?([0-9]{5,})(v[0-9]+)?' '{{ public_scheme }}://{{ public_host }}/articles/$1$2' permanent;
        rewrite '^/keywords/(.*)$' '{{ public_scheme }}://{{ public_host }}/search?for=$1' permanent;
        rewrite '^/(.*)/$' '{{ public_scheme }}://{{ public_host }}/$1' permanent;
        rewrite '^/About$' '{{ public_scheme }}://{{ public_host }}/about' permanent;
        rewrite '^/Community$' '{{ public_scheme }}://{{ public_host }}/community' permanent;
        rewrite '^/Events$' '{{ public_scheme }}://{{ public_host }}/events' permanent;
        rewrite '^/Labs$' '{{ public_scheme }}://{{ public_host }}/labs' permanent;

        # rewrite to external URLs have to go here
        rewrite '^/highlights$' 'https://crm.elifesciences.org/crm/highlights' permanent;
        rewrite '^/inside-elife/719e655d/elife-latest-the-costs-of-publishing$' 'https://reviewer.elifesciences.org/author-guide/fees' permanent;
        rewrite '^/inside-elife/719e655d$' 'https://reviewer.elifesciences.org/author-guide/fees' permanent;
        rewrite '^/inside-elife/a058ec77/what-it-costs-to-publish$' 'https://reviewer.elifesciences.org/author-guide/fees' permanent;
        rewrite '^/inside-elife/a058ec77$' 'https://reviewer.elifesciences.org/author-guide/fees' permanent;
        rewrite '^/inside-elife/b6365b76/setting-a-fee-for-publication$' 'https://reviewer.elifesciences.org/author-guide/fees' permanent;
        rewrite '^/inside-elife/b6365b76$' 'https://reviewer.elifesciences.org/author-guide/fees' permanent;
        rewrite '^/for-the-press/d5b3c1bf/elife-introduces-first-demonstration-of-the-open-source-publishing-platform-libero-publisher$' 'https://libero.pub/products/libero-publisher' permanent;
        rewrite '^/for-the-press/d5b3c1bf$' 'https://libero.pub/products/libero-publisher/' permanent;
        rewrite '^/inside-elife/388456f7$' 'https://docs.google.com/forms/d/e/1FAIpQLSf2_AAER-DpV0QjLcyvj7qE5V27t9LVaPqClPDiqqnLAiuJJw/viewform' permanent;
        rewrite '^/inside-elife/388456f7/statement-from-plurality-of-elife-editors$' 'https://docs.google.com/forms/d/e/1FAIpQLSf2_AAER-DpV0QjLcyvj7qE5V27t9LVaPqClPDiqqnLAiuJJw/viewform' permanent;

        if ($new_uri) {
            return 301 {{ public_scheme }}://{{ public_host }}$new_uri;
        }
    }

    location /app.php {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $request_filename;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param ENVIRONMENT_NAME {{ pillar.elife.env }};
        fastcgi_param APP_ENV {{ pillar.elife.env }};
        {% if salt['elife.cfg']('project.elb') or salt['elife.cfg']('project.alb') %}
        fastcgi_param APP_ELB true;
        {% endif %}
        fastcgi_param HTTP_X_FORWARDED_HOST $http_x_forwarded_host_filtered if_not_empty;
        {% if pillar.elife.env == 'dev' %}
        add_header X-Forwarded-Host-Filtered $http_x_forwarded_host_filtered;
        {% endif %}
        fastcgi_pass localhost:9000;
        internal;

        {% if pillar.journal.web_users %}
        satisfy any;
        allow 127.0.0.1;
        deny all;
        auth_basic "Journal {{ pillar.elife.env }}";
        auth_basic_user_file /etc/nginx/journal.htpasswd;
        {% endif %}
    }

    include /etc/nginx/traits.d/fixed-response-paths.conf;

    location = /favicon.ico {
        proxy_pass http://localhost:8080/favicon.ico;
    }

    location = /sitemap.xml {
        proxy_pass {{ pillar.journal.observer_url }}/report/sitemap.xml;
        proxy_connect_timeout 5s;
        proxy_read_timeout 30s;
    }

    location /assets {
        proxy_pass http://localhost:8080/assets;
    }

    location /bundles {
        proxy_pass http://localhost:8080/bundles;
    }

    location = /rss/recent.xml {
        proxy_pass {{ pillar.journal.observer_url }}/report/latest-articles.rss;
        proxy_connect_timeout 5s;
        proxy_read_timeout 30s;
    }

    location = /rss/ahead.xml {
        proxy_pass {{ pillar.journal.observer_url }}/report/upcoming-articles.rss;
        proxy_connect_timeout 5s;
        proxy_read_timeout 30s;
    }

    location ~* ^/rss/subject/([a-z0-9-]+).xml$ {
        proxy_pass {{ pillar.journal.observer_url }}/report/latest-articles-by-subject.rss?subject=$1;
        proxy_connect_timeout 5s;
        proxy_read_timeout 30s;
    }

    location = /rss/labs.xml {
        proxy_pass {{ pillar.journal.observer_url }}/report/labs-posts.rss;
        proxy_connect_timeout 5s;
        proxy_read_timeout 30s;
    }

    location = /rss/digests.xml {
        proxy_pass {{ pillar.journal.observer_url }}/report/digests.rss;
        proxy_connect_timeout 5s;
        proxy_read_timeout 30s;
    }

    location = /rss/magazine.xml {
        proxy_pass {{ pillar.journal.observer_url }}/report/magazine.rss;
        proxy_connect_timeout 5s;
        proxy_read_timeout 30s;
    }

    location = /rss/reviewed-preprints.xml {
        proxy_pass {{ pillar.journal.observer_url }}/report/reviewed-preprints.rss;
        proxy_connect_timeout 5s;
        proxy_read_timeout 30s;
    }

    location = /ping-fastly {
        add_header Cache-Control "must-revalidate, no-cache, no-store, private";
        add_header Content-Type "text/plain; charset=UTF-8";
        return 200 "pong";
    }

    {% if pillar.journal.preprint_url %}
    # lsh@2022-10: journal handles the landing page ("/reviewed-preprints") and it's
    # trailing slash alias ("/reviewed-preprints/"), anything else is proxied to EPP.

    # "/reviewed-preprints/"    => "https://example.org/reviewed-preprints"     (301)
    # "/reviewed-preprints"     => "https://example.org/reviewed-preprints"     (200)
    # "/reviewed-preprints/foo" => "https://proxy.tld/reviewed-preprints/foo"   (200)
    location ~ ^/reviewed-preprints/(.+)$ {
        proxy_pass {{ pillar.journal.preprint_url }};
        # arbitrary, adjust as we get a feel for EPP's performance.
        proxy_connect_timeout 5s;
        proxy_read_timeout 5s;
    }
    {% endif -%}

    {% if pillar.journal.about_url %}
    # scottaubrey@2023-01: Proxy most about/* pages to pubpub, except /about/people*
    # "/about"                  => proxy (as /about)
    # "/about/"                 => proxy (as /about)
    # "/about/about"            => proxy (as /about)
    # "/about/cheese"           => proxy (as /cheese)
    # "/about/people"           => no proxy
    # "/about/people/medicine"  => no proxy
    location ~ ^/about(?!/people).*$ {
        # rewrite /about to /about/
        rewrite '^/about$' '{{ public_scheme }}://{{ public_host }}/about/' permanent;
        # Rewrite a page that existed before, but has now been merged with the pubpub pages
        rewrite '^/about/publishing-with-elife$' '{{ public_scheme }}://{{ public_host }}/about/peer-review' permanent;

        # rewrite /about/ to /about before passing to proxy
        rewrite '^/about[/]{0,1}$' /about break;
        # rewrite /about/* to /* before passing to proxy
        rewrite '^/about/(.*)$' /$1 break;

        proxy_pass {{ pillar.journal.about_url }};
        # https://serverfault.com/questions/583374/configure-nginx-as-reverse-proxy-with-upstream-ssl#answer-969851
        proxy_ssl_server_name on;
        # timeout values are arbitrary
        proxy_connect_timeout 10s;
        proxy_read_timeout 10s;
        # simple identifier to flag incoming traffic for pubpub: enhanced-preprints-issues/685
        proxy_set_header X-PubPubClient elifesciences;
    }
    {% endif -%}

    {% if pillar.journal.resources_url %}
    # Proxy /resources pages to pubpub
    # - https://github.com/elifesciences/issues/issues/8516
    # "/resources"                  => proxy (as /resources)
    # "/resourcesasdf               => proxy (as /resourcesasdf)
    # "/resources/"                 => proxy (as /resources/)
    # "/resources/foo"              => proxy (as /resources/foo)
    # "/Resources"                  => no proxy

    location ^~ /resources {
        proxy_pass {{ pillar.journal.resources_url }};
        # https://serverfault.com/questions/583374/configure-nginx-as-reverse-proxy-with-upstream-ssl#answer-969851
        proxy_ssl_server_name on;
        # timeout values are arbitrary
        proxy_connect_timeout 10s;
        proxy_read_timeout 10s;
        # simple identifier to flag incoming traffic for pubpub: enhanced-preprints-issues/685
        proxy_set_header X-PubPubClient elifesciences;
    }
    {% endif -%}

    {% if pillar.journal.media_policy_url %}
    # Proxy /media-policy pages to pubpub
    # - https://github.com/elifesciences/issues/issues/8516
    # "/media-policy"                  => proxy (as /media-policy)
    # "/media-policyasdf               => proxy (as /media-policyasdf)
    # "/media-policy/"                 => proxy (as /media-policy/)
    # "/media-policy/foo"              => proxy (as /media-policy/foo)
    # "/Media-policy"                  => no proxy

    location ^~ /media-policy {
        proxy_pass {{ pillar.journal.media_policy_url }};
        # https://serverfault.com/questions/583374/configure-nginx-as-reverse-proxy-with-upstream-ssl#answer-969851
        proxy_ssl_server_name on;
        # timeout values are arbitrary
        proxy_connect_timeout 10s;
        proxy_read_timeout 10s;
        # simple identifier to flag incoming traffic for pubpub: enhanced-preprints-issues/685
        proxy_set_header X-PubPubClient elifesciences;
    }
    {% endif -%}

    {% if pillar.journal.community_url %}
    # Proxy /community pages to pubpub
    # - https://github.com/elifesciences/issues/issues/8516
    # ali-tm-amin@2024-04: Proxy all community pages below to pubpub
    # "/community"                                 => proxy (as /community)
    # "/community"                                 => proxy (as /community/)
    # "/community/get-involved"                    => proxy (as /get-involved)
    # "/community/ben-barres-spotlight-awards"     => proxy (as /ben-barres-spotlight-awards)
    # "/community/early-career-advisory-group"     => proxy (as /early-career-advisory-group)
    # "/community/equity-diversity-inclusion"      => proxy (as /equity-diversity-inclusion)
    # "/community/global-south-committee"          => proxy (as /global-south-committee)
    # "/community/ambassadors"                     => proxy (as /ambassadors)
    # "/community/community-alumni"                => proxy (as /community-alumni)
    # "/community/community-voices"                => proxy (as /community-voices)


    location ^~ /community {
        # rewrite /community to /community/
        rewrite '^/community$' '{{ public_scheme }}://{{ public_host }}/community/' permanent;
        # rewrite /community/ to /community before passing to proxy
        rewrite '^/community[/]{0,1}$' /community break;
        # rewrite /community/* to /* before passing to proxy
        rewrite '^/community/(.*)$' /$1 break;
        proxy_pass {{ pillar.journal.community_url }};
        # https://serverfault.com/questions/583374/configure-nginx-as-reverse-proxy-with-upstream-ssl#answer-969851
        proxy_ssl_server_name on;
        # timeout values are arbitrary
        proxy_connect_timeout 10s;
        proxy_read_timeout 10s;
        # simple identifier to flag incoming traffic for pubpub: enhanced-preprints-issues/685
        proxy_set_header X-PubPubClient elifesciences;
    }
    {% endif -%}

    {% if pillar.journal.privacy_notice_url %}
    # Proxy /privacy pages to pubpub
    location /privacy {
        proxy_pass {{ pillar.journal.privacy_notice_url }};
        proxy_ssl_server_name on;
        proxy_connect_timeout 10s;
        proxy_read_timeout 10s;
        proxy_set_header X-PubPubClient elifesciences;
    }
    {% endif -%}

    {% if pillar.journal.cookie_declaration_url %}
    # Proxy /cookie-declaration pages to pubpub
    location /cookie-declaration {
        proxy_pass {{ pillar.journal.cookie_declaration_url }};
        proxy_ssl_server_name on;
        proxy_connect_timeout 10s;
        proxy_read_timeout 10s;
        proxy_set_header X-PubPubClient elifesciences;
    }
    {% endif -%}

    {% if pillar.journal.learning_resources_url %}
    # Proxy /learning-resources pages to pubpub
    location /learning-resources {
        proxy_pass {{ pillar.journal.learning_resources_url }};
        proxy_ssl_server_name on;
        proxy_connect_timeout 10s;
        proxy_read_timeout 10s;
        proxy_set_header X-PubPubClient elifesciences;
    }
    {% endif -%}

    {% if pillar.journal.about_url or pillar.journal.resources_url or pillar.journal.media_policy_url or pillar.journal.community_url or pillar.journal.privacy_notice_url or pillar.journal.cookie_declaration_url or pillar.journal.learning_resources_url %}

    # lsh@2023-11: revisit these pubpub proxies if/when we get a third path to proxy.
    # scottaubrey@2023-01: Proxy dist/* URLs to pubpub to get the static assets
    # This is to work around pubpub not being able to configure reference static assets URL
    location ~ ^/dist/(.*)$ {
        proxy_pass {{ pillar.journal.pubpub_url }};
        # https://serverfault.com/questions/583374/configure-nginx-as-reverse-proxy-with-upstream-ssl#answer-969851
        proxy_ssl_server_name on;
        # timeout values are arbitrary
        proxy_connect_timeout 10s;
        proxy_read_timeout 10s;
        # simple identifier to flag incoming traffic for pubpub: enhanced-preprints-issues/685
        proxy_set_header X-PubPubClient elifesciences;
    }
    {% endif -%}

    {% if pillar.journal.submit_redirect_url %}
    rewrite '^/submit[/]*$' {{ pillar.journal.submit_redirect_url }} permanent;
    {% endif -%}

    access_log /var/log/nginx/journal.access.log combined_with_time;
    error_log /var/log/nginx/journal.error.log notice;

    include /etc/nginx/traits.d/error-pages.conf;
}
